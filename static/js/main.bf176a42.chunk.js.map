{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["b","c","f","fd","Object","keys","console","log","App","className","z","join","map","item","style","color","background","data-item","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6JAGMA,EAAI,CAAC,EAAE,EAAE,GACTC,EAAI,CAAC,WAAe,aAEpBC,EAAI,CAAC,IAAM,IAAK,IAAM,KACtBC,EAAKC,OAAOC,KAAKH,GACvBI,QAAQC,IAAIJ,GAyBGK,MAxBf,WACE,OACA,sBAAKC,UAAU,YAAf,UACE,uHACA,yJACA,6HAAqB,SACrB,8BAbE,IAcF,8BAAMC,KACN,0GACA,8BAAMV,IACN,8BAAMA,EAAEW,KAAK,OACb,sHACA,8BAAMX,EAAEY,KAAI,SAAAC,GAAI,OAAEA,EAAK,SACvB,gOACA,8BAAMb,EAAEY,KAAI,SAAAC,GAAI,OAAE,iCAAoBA,GAAPA,QAC/B,mBAAGC,MAAOb,EAAV,2BACA,mBAAGa,MAAO,CAACC,MApBL,SAoBeC,WAAY,SAAjC,2BACA,8BAAMZ,OAAOC,KAAKH,GAAGU,KAAI,SAAAC,GAAI,OAAIA,EAAK,IAAIX,EAAEW,QAC5C,6BAAKV,EAAGS,KAAI,SAAAC,GAAI,OAAE,6BAAgBA,EAAK,IAAIX,EAAEW,IAAlBA,QAC3B,sMACA,4BAAIb,EAAEY,KAAI,SAAAC,GAAI,OAAE,sBAAiBI,YAAWJ,EAA5B,SAAmCA,GAAxBA,YCjBhBK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.bf176a42.chunk.js","sourcesContent":["//import logo from './logo.svg';\nimport './App.css';\nlet z=4;\nconst b = [7,6,5];\nconst c = {'background' : 'orangered'};\nconst d = 'yellow';\nconst f = {\"one\":100, \"two\":200};\nconst fd = Object.keys(f);\nconsole.log(fd);\nfunction App() {\n  return (\n  <div className=\"container\">\n    <h1>Заголовок сайта</h1>\n    <h2>Основные конструкции JSX</h2>     \n    <p>Вывод переменной {\"{ }\"}</p>\n    <div>{z}</div>\n    <div>{z*8}</div>\n    <p>Вывод массива</p>\n    <div>{b}</div>\n    <div>{b.join(',')}</div>\n    <p>Методы массивов</p>\n    <div>{b.map(item=>item+' ')}</div>\n    <p>Методы массивов - создание элементов</p>\n    <div>{b.map(item=><strong key={item}>{item}</strong> )}</div>\n    <p style={c}>Inlane style1</p>\n    <p style={{color: d, background: \"black\"}}>Inlane style2</p>\n    <div>{Object.keys(f).map(item => item+' '+f[item])}</div>\n    <ul>{fd.map(item=><li key={item}>{item+' '+f[item]}</li>)}</ul>\n    <p>Создание элементов из массивов</p>\n    <p>{b.map(item=><span key={item} data-item={item}>{item}</span>)}</p>\n  </div>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}